select(-c(1)) %>%
clean_names() %>%
rename(
sid = 1,
belong = 2,
`trust adult` = 3,
`voice matters` = 4,
`excited to learn` = 5,
`peers care` = 6,
`I care about peers` = 7,
`teachers care` = 8,
`stuck strategies` = 9,
`upset strategies` = 10,
`problem-solving strategies` = 11,
`share strategies with family` = 12,
`Wants school adult` = 13) %>%
mutate(
quarter = "F. '20")
# combine fall and winter data set
wf <- rbind(winter, fall)
# only keep numbers in SID column
wf <- wf %>%
mutate(sid = parse_number(wf$sid, trim_ws = T))
View(wf)
#Change likert scale to numbers
sel_df[sel_df == "Siempre // Always"] <- "3"
View(sel_df)
#clear memory
rm(list = ls())
#penalize excessive significant figures
options(digits = 3)
#preventing scientific notation
options(scipen = 10)
#packages used in this analysis, will install packages if not installed
if(!require(knitr)){
install.packages("knitr", dependencies = TRUE)
library(knitr)
}
if(!require(tidyverse)){
install.packages("tidyverse", dependencies = TRUE)
library(tidyverse)
}
if(!require(haven)){
install.packages("haven", dependencies = TRUE)
library(haven)
}
if(!require(janitor)){
install.packages("janitor", dependencies = TRUE)
library(janitor)
}
if(!require(ggthemes)){
install.packages("ggthemes", dependencies = TRUE)
library(ggthemes)
}
if(!require(readxl)){
install.packages("readxl", dependencies = TRUE)
library(readxl)
}
library(RColorBrewer)
library(ggalt)
library(ggrepel)
library(kableExtra)
library(waffle)
library(cowplot)
library(patchwork)
#set global output chunk options
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE, collapse = F, highlight = F, results = "asis")
#Reading in the data
winter <- readxl::read_xlsx("sel_indicators_survey.xlsx", sheet = 1)
fall <- readxl::read_xlsx("sel_indicators_survey.xlsx", sheet = 2)
demo <- readxl::read_xlsx("sel_indicators_survey.xlsx", sheet = 3)
theme_set(theme_classic())
winter <- winter %>%
select(-c(1)) %>%
clean_names() %>%
rename(
sid = 1,
belong = 2,
`trust adult` = 3,
`voice matters` = 4,
`excited to learn` = 5,
`peers care` = 6,
`I care about peers` = 7,
`teachers care` = 8,
`stuck strategies` = 9,
`upset strategies` = 10,
`problem-solving strategies` = 11,
`share strategies with family` = 12,
`Wants school adult` = 13) %>%
mutate(
quarter = "W. '21")
# Fall sheet
fall <- fall %>%
select(-c(1)) %>%
clean_names() %>%
rename(
sid = 1,
belong = 2,
`trust adult` = 3,
`voice matters` = 4,
`excited to learn` = 5,
`peers care` = 6,
`I care about peers` = 7,
`teachers care` = 8,
`stuck strategies` = 9,
`upset strategies` = 10,
`problem-solving strategies` = 11,
`share strategies with family` = 12,
`Wants school adult` = 13) %>%
mutate(
quarter = "F. '20")
# combine fall and winter data set
wf <- rbind(winter, fall)
# only keep numbers in SID column
wf <- wf %>%
mutate(sid = parse_number(wf$sid, trim_ws = T))
# Clean demo names
demo <- demo %>%
clean_names() %>%
rename(
`home language` = 3,
gender = gen)
# Match WF dataset to demographic dataset
sel_df <- left_join(wf, demo, by = "sid")
View(sel_df)
#Reading in the data
winter <- readxl::read_xlsx("sel_indicators_survey.xlsx", sheet = 1)
fall <- readxl::read_xlsx("sel_indicators_survey.xlsx", sheet = 2)
demo <- readxl::read_xlsx("sel_indicators_survey.xlsx", sheet = 3)
theme_set(theme_classic())
# Make Dataframe for excel
wf %>%
mutate(sid = parse_number(wf$sid, trim_ws = T)) %>% View()
wf %>%
mutate(sid = parse_number(wf$sid, trim_ws = T)) %>% View()
View(wf)
View(demo)
View(wf)
#clear memory
rm(list = ls())
#penalize excessive significant figures
options(digits = 3)
#preventing scientific notation
options(scipen = 10)
#packages used in this analysis, will install packages if not installed
if(!require(knitr)){
install.packages("knitr", dependencies = TRUE)
library(knitr)
}
if(!require(tidyverse)){
install.packages("tidyverse", dependencies = TRUE)
library(tidyverse)
}
if(!require(haven)){
install.packages("haven", dependencies = TRUE)
library(haven)
}
if(!require(janitor)){
install.packages("janitor", dependencies = TRUE)
library(janitor)
}
if(!require(ggthemes)){
install.packages("ggthemes", dependencies = TRUE)
library(ggthemes)
}
if(!require(readxl)){
install.packages("readxl", dependencies = TRUE)
library(readxl)
}
library(RColorBrewer)
library(ggalt)
library(ggrepel)
library(kableExtra)
library(waffle)
library(cowplot)
library(patchwork)
#set global output chunk options
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE, collapse = F, highlight = F, results = "asis")
#Reading in the data
winter <- readxl::read_xlsx("sel_indicators_survey.xlsx", sheet = 1)
fall <- readxl::read_xlsx("sel_indicators_survey.xlsx", sheet = 2)
demo <- readxl::read_xlsx("sel_indicators_survey.xlsx", sheet = 3)
theme_set(theme_classic())
# Make Dataframe for excel
rbind(winter, fall) %>% View()
View(winter)
rbind(winter, fall) %>%
rename("sid" = `Email Address`) %>% View()
rbind(winter, fall) %>%
rename("sid" = `Email Address`) %>%
mutate(sid = parse_number(wf$sid, trim_ws = T)) %>%
View()
rbind(winter, fall) %>%
rename("sid" = `Email Address`) %>%
mutate(sid = parse_number(sid, trim_ws = T)) %>%
View()
View(demo)
# Make Dataframe for excel
rbind(winter, fall) %>%
rename("SID" = `Email Address`) %>%
mutate(sid = parse_number(sid, trim_ws = T)) %>%
left_join(demo, by = "SID") %>%
View()
rbind(winter, fall) %>%
rename("SID" = `Email Address`) %>%
mutate(SID = parse_number(SID, trim_ws = T)) %>%
left_join(demo, by = "SID") %>%
View()
View(demo)
rbind(winter, fall) %>%
rename("SID" = `Email Address`) %>%
mutate(SID = parse_number(SID, trim_ws = T)) %>%
left_join(demo, by = "SID") %>%
View()
winter %>%
mutate(quarter = "Winter" & year = "2021") %>%
winter %>%
mutate(quarter = "Winter", year = "2021") %>%
fall %>%
mutate(quarter = "Fall", year = "2020") %>%
rbind(winter, fall) %>%
rename("SID" = `Email Address`) %>%
mutate(SID = parse_number(SID, trim_ws = T)) %>%
left_join(demo, by = "SID") %>%
View()
winter %>%
mutate(quarter = "Winter", year = "2021")
fall
mutate(quarter = "Fall", year = "2020") %>%
rbind(winter, fall) %>%
rename("SID" = `Email Address`) %>%
mutate(SID = parse_number(SID, trim_ws = T)) %>%
left_join(demo, by = "SID") %>%
View()
winter %>%
mutate(quarter = "Winter", year = "2021")
fall
mutate(quarter = "Fall", year = "2020")
winter %>%
mutate(quarter = "Winter", year = "2021")
fall %>%
mutate(quarter = "Fall", year = "2020")
rbind(winter, fall) %>%
rename("SID" = `Email Address`) %>%
mutate(SID = parse_number(SID, trim_ws = T)) %>%
left_join(demo, by = "SID") %>%
View()
winter <- winter %>%
mutate(quarter = "Winter", year = "2021")
fall <- fall %>%
mutate(quarter = "Fall", year = "2020")
rbind(winter, fall) %>%
rename("SID" = `Email Address`) %>%
mutate(SID = parse_number(SID, trim_ws = T)) %>%
left_join(demo, by = "SID") %>%
View()
winter <- winter %>%
mutate(Quarter = "Winter", Year = "2021")
fall <- fall %>%
mutate(Quarter = "Fall", Year = "2020")
rbind(winter, fall) %>%
rename("SID" = `Email Address`) %>%
mutate(SID = parse_number(SID, trim_ws = T)) %>%
left_join(demo, by = "SID") %>%
View()
#clear memory
rm(list = ls())
#penalize excessive significant figures
options(digits = 3)
#preventing scientific notation
options(scipen = 10)
#packages used in this analysis, will install packages if not installed
if(!require(knitr)){
install.packages("knitr", dependencies = TRUE)
library(knitr)
}
if(!require(tidyverse)){
install.packages("tidyverse", dependencies = TRUE)
library(tidyverse)
}
if(!require(haven)){
install.packages("haven", dependencies = TRUE)
library(haven)
}
if(!require(janitor)){
install.packages("janitor", dependencies = TRUE)
library(janitor)
}
if(!require(ggthemes)){
install.packages("ggthemes", dependencies = TRUE)
library(ggthemes)
}
if(!require(readxl)){
install.packages("readxl", dependencies = TRUE)
library(readxl)
}
library(RColorBrewer)
library(ggalt)
library(ggrepel)
library(kableExtra)
library(waffle)
library(cowplot)
library(patchwork)
#set global output chunk options
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE, collapse = F, highlight = F, results = "asis")
#Reading in the data
winter <- readxl::read_xlsx("sel_indicators_survey.xlsx", sheet = 1)
fall <- readxl::read_xlsx("sel_indicators_survey.xlsx", sheet = 2)
demo <- readxl::read_xlsx("sel_indicators_survey.xlsx", sheet = 3)
theme_set(theme_classic())
winter <- winter %>%
mutate(Quarter = "Winter", Year = "2021")
fall <- fall %>%
mutate(Quarter = "Fall", Year = "2020")
rbind(winter, fall) %>%
rename("SID" = `Email Address`) %>%
mutate(SID = parse_number(SID, trim_ws = T)) %>%
left_join(demo, by = "SID") %>%
View()
rbind(winter, fall) %>%
rename("SID" = `Email Address`) %>%
mutate(SID = parse_number(SID, trim_ws = T)) %>%
left_join(demo, by = "SID") %>%
write_excel_csv("sel_indicators_survey_Demo.xlsx")
rbind(winter, fall) %>%
rename("SID" = `Email Address`) %>%
mutate(SID = parse_number(SID, trim_ws = T)) %>%
left_join(demo, by = "SID") %>%
write_excel_csv("sel_indicators_survey_Demo")
rbind(winter, fall) %>%
rename("SID" = `Email Address`) %>%
mutate(SID = parse_number(SID, trim_ws = T)) %>%
left_join(demo, by = "SID") %>%
write_csv("sel_indicators_survey_Demo.csv")
#clear memory
rm(list = ls())
#penalize excessive significant figures
options(digits = 3)
#preventing scientific notation
options(scipen = 10)
#packages used in this analysis, will install packages if not installed
if(!require(knitr)){
install.packages("knitr", dependencies = TRUE)
library(knitr)
}
if(!require(tidyverse)){
install.packages("tidyverse", dependencies = TRUE)
library(tidyverse)
}
if(!require(haven)){
install.packages("haven", dependencies = TRUE)
library(haven)
}
if(!require(janitor)){
install.packages("janitor", dependencies = TRUE)
library(janitor)
}
if(!require(ggthemes)){
install.packages("ggthemes", dependencies = TRUE)
library(ggthemes)
}
if(!require(readxl)){
install.packages("readxl", dependencies = TRUE)
library(readxl)
}
library(RColorBrewer)
library(ggalt)
library(ggrepel)
library(kableExtra)
library(waffle)
library(cowplot)
library(patchwork)
#set global output chunk options
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE, collapse = F, highlight = F, results = "asis")
#Reading in the data
winter <- readxl::read_xlsx("sel_indicators_survey.xlsx", sheet = 1)
fall <- readxl::read_xlsx("sel_indicators_survey.xlsx", sheet = 2)
demo <- readxl::read_xlsx("sel_indicators_survey.xlsx", sheet = 3)
theme_set(theme_classic())
#Some quick data cleaning
# Winter sheet
winter <- winter %>%
select(-c(1)) %>%
clean_names() %>%
rename(
sid = 1,
belong = 2,
`trust adult` = 3,
`voice matters` = 4,
`excited to learn` = 5,
`peers care` = 6,
`I care about peers` = 7,
`teachers care` = 8,
`stuck strategies` = 9,
`upset strategies` = 10,
`problem-solving strategies` = 11,
`share strategies with family` = 12,
`Wants school adult` = 13) %>%
mutate(
quarter = "W. '21")
# Fall sheet
fall <- fall %>%
select(-c(1)) %>%
clean_names() %>%
rename(
sid = 1,
belong = 2,
`trust adult` = 3,
`voice matters` = 4,
`excited to learn` = 5,
`peers care` = 6,
`I care about peers` = 7,
`teachers care` = 8,
`stuck strategies` = 9,
`upset strategies` = 10,
`problem-solving strategies` = 11,
`share strategies with family` = 12,
`Wants school adult` = 13) %>%
mutate(
quarter = "F. '20")
# combine fall and winter data set
wf <- rbind(winter, fall)
# only keep numbers in SID column
wf <- wf %>%
mutate(sid = parse_number(wf$sid, trim_ws = T))
# Clean demo names
demo <- demo %>%
clean_names() %>%
rename(
`home language` = 3,
gender = gen)
# Match WF dataset to demographic dataset
sel_df <- left_join(wf, demo, by = "sid")
#Change likert scale to numbers
sel_df[sel_df == "Siempre // Always"] <- "3"
sel_df[sel_df == "Casi Siempre // Usually"] <- "2"
sel_df[sel_df == "De Vez En Cuando // Sometimes"] <- "1"
sel_df[sel_df == "Nunca // Never"] <- "0"
sel_df[sel_df == "Si // Yes"] <- "1"
sel_df[sel_df == "No"] <- "0"
sel_df[sel_df == "Black or African American"] <- "Black or AA"
sel_df[sel_df == "Native Hawaiian or Other Pacific Islander"] <- "NHPI"
sel_df[sel_df == "American Indian or Alaska Native"] <- "AIAN"
# clean names
sel_df <- clean_names(sel_df)
#Use the hablar package to change character variables that should be integer/numeric to interger
sel_df <- sel_df %>% hablar::retype()
sel_long <- sel_df %>% pivot_longer(cols = belong:wants_school_adult, names_to = "domain", values_to = "score")
# remove underscores from strings in domain column
sel_long$domain <- str_replace_all(sel_long$domain, "_", " ")
# Make some varibles factors in wf data set
# Change observation Names
wf[wf == "Siempre // Always"] <- "Siempre"
wf[wf == "Casi Siempre // Usually"] <- "Casi Siempre"
wf[wf == "De Vez En Cuando // Sometimes"] <- "De Vez En Cuando"
wf[wf == "Nunca // Never"] <- "Nunca"
wf[wf == "Si // Yes"] <- "Si"
# Make some columns factors in wf dataframe
wf <- wf %>% mutate_if(is.character, as.factor)
# Change factor levels
wf$belong <- factor(wf$belong, levels = c("Nunca", "De Vez En Cuando", "Casi Siempre", "Siempre"))
wf$`trust adult` <- factor(wf$`trust adult`, levels = c("Nunca", "De Vez En Cuando", "Casi Siempre", "Siempre"))
wf$`voice matters` <- factor(wf$`voice matters`, levels = c("Nunca", "De Vez En Cuando", "Casi Siempre", "Siempre"))
wf$`excited to learn` <- factor(wf$`excited to learn`, levels = c("Nunca", "De Vez En Cuando", "Casi Siempre", "Siempre"))
wf$`peers care` <- factor(wf$`peers care`, levels = c("Nunca", "De Vez En Cuando", "Casi Siempre", "Siempre"))
wf$`teachers care` <- factor(wf$`teachers care`, levels = c("Nunca", "De Vez En Cuando", "Casi Siempre", "Siempre"))
wf$`I care about peers` <- factor(wf$`I care about peers`, levels = c("Nunca", "De Vez En Cuando", "Casi Siempre", "Siempre"))
wf$`stuck strategies` <- factor(wf$`stuck strategies`, levels = c("Nunca", "De Vez En Cuando", "Casi Siempre", "Siempre"))
wf$`upset strategies` <- factor(wf$`upset strategies`, levels = c("Nunca", "De Vez En Cuando", "Casi Siempre", "Siempre"))
wf$`problem-solving strategies` <- factor(wf$`problem-solving strategies`, levels = c("Nunca", "De Vez En Cuando", "Casi Siempre", "Siempre"))
wf$`share strategies with family` <- factor(wf$`share strategies with family`, levels = c("Nunca", "De Vez En Cuando", "Casi Siempre", "Siempre"))
wf$quarter <- factor(wf$quarter, levels = c("W. '21", "F. '20"))
# Peers care
a <- wf %>%
group_by(quarter) %>%
filter(!is.na(`peers care`)) %>%
count(`peers care`) %>%
summarise(`peers care`, "Total" = n, "Percent" = round(n/sum(n),4)) %>%
ggplot(aes(x= quarter, y= Percent, fill = `peers care`)) + geom_col(position = position_stack(reverse = T), width = .5) +
labs(x = "", y= "", title = "Estudiantes se preocupan por mí y me tratan con amabilidad", subtitle = "Students care about me and treat me with kindness") + scale_fill_brewer(palette = "Dark2") +
geom_text(aes(label= ifelse(Percent > "0.05",scales::percent(Percent), "")), position = position_stack(vjust = .5, reverse = T), size =2.5, color = "black") + coord_flip() + theme(legend.title = element_blank(), axis.line = element_blank(), axis.ticks = element_blank(),axis.text.x = element_blank(),legend.position = "none")
legend <- get_legend(a + guides(color = guide_legend(nrow = 1)) + theme(legend.position = "bottom"))
# I Care
b <- wf %>%
group_by(quarter) %>%
filter(!is.na(`I care about peers`)) %>%
count(`I care about peers`) %>%
summarise(`I care about peers`, "Total" = n, "Percent" = round(n/sum(n),4)) %>%
ggplot(aes(x= quarter, y= Percent, fill = `I care about peers`)) + geom_col(position = position_stack(reverse = T), width = .5) +
labs(x = "", y= "", title = "Me preocupo por los demás y los trato con amabilidad", subtitle = "I care about students and treat them with kindness") + scale_fill_brewer(palette = "Dark2") +
geom_text(aes(label= ifelse(Percent > "0.05",scales::percent(Percent), "")), position = position_stack(vjust = .5, reverse = T), size =2.5, color = "black") + coord_flip() + theme(legend.title = element_blank(), axis.line = element_blank(), axis.ticks = element_blank(),axis.text.x = element_blank(),legend.position = "none")
# Teachers Care
c <- wf %>%
group_by(quarter) %>%
filter(!is.na(`teachers care`)) %>%
count(`teachers care`) %>%
summarise(`teachers care`, "Total" = n, "Percent" = round(n/sum(n),4)) %>%
ggplot(aes(x= quarter, y= Percent, fill = `teachers care`)) + geom_col(position = position_stack(reverse = T), width = .5) +
labs(x = "", y= "", title = "Mis maestros se preocupan por mí y me tratan con amabilidad", caption = "values less than 5% are not shown", subtitle = "My teachers care about me and treat me with kindness") + scale_fill_brewer(palette = "Dark2") + geom_text(aes(label= ifelse(Percent > "0.05",scales::percent(Percent), "")), position = position_stack(vjust = .5, reverse = T), size =2.5, color = "black") + coord_flip() + theme(legend.title = element_blank(), axis.line = element_blank(), axis.ticks = element_blank(),axis.text.x = element_blank(),legend.position = "none")
a + b + c + legend + plot_layout(ncol = 1)
#Overall School Climate by Gender
sel_long %>%
filter(!str_detect(domain,paste(c("care", "strategies"),collapse = '|'))) %>%
filter(domain != "wants school adult") %>%
filter(!is.na(gender)) %>%
group_by(domain, quarter, gender) %>%
summarise(y= mean(score, na.rm = T)) %>%
ggplot(aes(quarter, y, color = domain, group = domain)) + labs(title= "" ,x = "", y = "Average Rating", color= "", subtitle = "dotted lines indicate schoolwide average of Fall and Winter") + scale_y_continuous(limits = c(0,3), labels = c("Nunca/Never", "De Vez En Cuando/Sometimes", "Casi Siempre/Usually", "Siempre/Always")) + geom_point() + geom_line() + facet_wrap(~gender) + scale_color_brewer(palette = "Dark2") + theme(strip.background = element_blank(), strip.text.x = element_text(face = "bold"), legend.position = "bottom") + guides(color = guide_legend(nrow = 2, byrow = TRUE)) +
geom_hline(yintercept = 2.21, color = "#1B9E77", linetype = "dashed") +
geom_hline(yintercept = 2.10, color = "#D95F02", linetype = "dashed") +
geom_hline(yintercept = 2.33, color = "#7570B3", linetype = "dashed") +
geom_hline(yintercept = 1.99, color = "#E7298A", linetype = "dashed")
